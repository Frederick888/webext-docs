[
  {
    "namespace": "messages",
    "functions": [
      {
        "name": "list",
        "returns": {
          "$ref": "MessageList"
        }
      },
      {
        "name": "continueList",
        "returns": {
          "$ref": "MessageList"
        }
      },
      {
        "name": "get",
        "returns": {
          "$ref": "MessageHeader"
        }
      },
      {
        "name": "getFull",
        "returns": {
          "$ref": "MessagePart"
        }
      },
      {
        "name": "getRaw",
        "description" : "Returns the unmodified source of a message as a `binary string <https://developer.mozilla.org/en-US/docs/Web/API/DOMString/Binary>`__, which is a simple series of 8-bit values. If the message contains non-ASCII characters, the body parts in the binary string cannot be read directly and must be decoded according to their character sets. Use :ref:`messages.getFull` to get the correctly decoded parts. Manually decoding the raw message is probably too error-prone, especially if the message contains MIME parts with different character set encodings or attachments.\n\nTo get a readable version of the raw message as it appears in Thunderbird's message source view, it may be sufficient to decode the message according to the character set specified in its main ``content-type`` header (example: <value>text/html; charset=UTF-8</value>) using the following function (see MDN for `supported input encodings <https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API/Encodings>`__): <literalinclude>includes/messages/decodeBinaryString.js<lang>JavaScript</lang></literalinclude>",
        "added": "72",
        "backported": "68.7",
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "listAttachments",
        "added": "88",
        "returns": {
          "type": "array",
            "items": {
              "$ref": "Attachment"
            }
        }
      },
      {
        "name": "getAttachmentFile",
        "added": "88",
        "hints": "The most simple way to get the content of an attachment is to use the ``text()`` method of the ``File`` object:<literalinclude>includes/messages/file.js<lang>JavaScript</lang></literalinclude>",
        "returns": {
          "$ref": "extensionTypes.File"
        }
      },
      {
        "name": "query",
        "added": "69",
        "backported": "68.2",
        "returns": {
          "$ref": "MessageList"
        },
        "parameters": [
          {
            "name": "queryInfo",
            "properties": {
              "tags": {
                "added": "74"
              },
              "includeSubFolders": {
                "added": "91"
              },
              "headerMessageId": {
                "added": "85"
              },
              "attachment": {
                "added": "96",
                "backported": "91.4.1"
              }
            }
          }
        ]
      },
      {
        "name": "listTags",
        "returns": {
          "type": "array",
          "items": {
            "$ref": "MessageTag"
          }
        }
      },
      {
        "name": "update",
        "parameters": [
          {
            "name": "newProperties",
            "properties": {
              "junk": {
                "added": "73",
                "backported": "68.7"
              }
            }
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onNewMailReceived",
        "added": "75"
      },
      {
        "name": "onUpdated",
        "added": "91"
      },
      {
        "name": "onMoved",
        "added": "91"
      },
      {
        "name": "onCopied",
        "added": "91"
      },
      {
        "name": "onDeleted",
        "added": "91"
      }
    ],
    "types": [
      {
        "id": "MessageHeader",
        "type": "object",
        "properties": {
          "headerMessageId": {
            "added": "85"
          },
          "junk": {
            "added": "74"
          },
          "junkScore": {
            "added": "74"
          },
          "size": {
            "added": "90"
          }
        }
      }
    ]
  }
]
